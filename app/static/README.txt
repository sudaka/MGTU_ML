==================== Структура проекта ====================
Папки:
	09405_ltsm - сохраненная модель LTSM сети для точки 09405 (Нижняя Тунгуска - р.Нижняя Тунгуска - с.Преображенка)
	postsinfo - обработанные данные для всех точек
	rawinfo - исходные данные
Файлы:
	09405.html - отчет о статистике и результатах работы по заданной точке.
	09405.json - файл настроек и параметров
	09405_ltsm_0_prediction.jpg - файл визуализации предсказания уровня
	09405_level_flags.jpg - соотношение флагов и уровня во времени
	09405_multistep.jpg - train/val loss
	09405_pairs.jpg - парный анализ зависимостей
	rivercommon.py - дополнительные модули
	rivermain.py - основной файл проекта




Для выполнения задачи необходимо реализовать задачи:
	- Преобразование данных в удобный формат
	- Оценка свойств входных данных через графическое представление и статистические параметры
	- Применение моделей
	- Оценка полученных результатов
	- Представление отчета о задаче

==================== Структура классов задачи преобразования данных: rivercommon.py ====================
DataFile - класс для парсинга входного файла датасета. На входе получает имя файла и директорию (rawinfo) для сохранения результата. Результат представлен в виде номер станции.csv Сохраняет файлы в директорию postsinfo.
Формат выходных файлов: Дата;Уровень воды;Флаги(49 штук, в соответствии с легендой) Использует дополнительные классы:
	- WatherLegend: класс для получения легенды из входного файла. Используется BeautifulSoup. На выходе - словарь легенды.
	- WatherPost: класс для получения информации легенды одной станции наблюдения.
	- RiverInfo: класс для получения таблицы уровней и представления всех флагов в виде битовой маски. Выход - таблица Дата, Уровень, флаги (в соответствии с легендой).

Отчет:
ReportHTML - дополнительный класс для оформления отчета

Параметры:
MainParams - класс сохранения параметров скрипта

==================== Доп информация ====================
При попытке спрогнозировать временной ряд с помощью ARMA/ARIMA технологий хоть более/менее похожий на необходимый результат не получился. 
Была попытка выполнить фурье-преобразование данных, но полученные данные с точки зрения обучения оказались не лучше сырых данных.
Приведен алгоритм расчета для одной точки, имя файла задается при инициализации класса MainParams. Для получения моделей остальных точек наблюдения можно в цикле перебрать все файлы. Но на расчет одной точки у меня 
уходит около 2 часов.

В коде много комментариев - работал.